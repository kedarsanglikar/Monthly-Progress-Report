/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javaapplication21;

import java.io.File;
import java.io.FileOutputStream;
import java.sql.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Dell
 */
public class AllData extends javax.swing.JFrame {

    /**
     * Creates new form AllData
     */
    Config config;

    public AllData() {
        initComponents();
        config = new Config();
        getTables();
    }

    public void getTables() {

        try {
            DatabaseMetaData metaData = config.conn.getMetaData();

            ResultSet tables = metaData.getTables(null, null, "%", new String[]{"TABLE"});
            ArrayList<String> tableNames = new ArrayList<>();

            while (tables.next()) {
                tableNames.add(tables.getString("TABLE_NAME"));
            }

            // Convert ArrayList to array
            String[] tableNamesArray = tableNames.toArray(new String[0]);

            // Print table names
            for (String tableName : tableNamesArray) {
                System.out.println(tableName);
            }
            jComboBox1.setModel(new DefaultComboBoxModel(tableNamesArray));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Exception occured : " + e.toString(), "Monthly Progress Report", JOptionPane.ERROR_MESSAGE);

            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        yearWiseDataComboBox = new javax.swing.JComboBox<>();
        showDataBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        uttarDakshinTable = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        exportToExcel1 = new javax.swing.JButton();
        closeBtn1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        uttarDakshinTableAwhal = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        exportToExcel2 = new javax.swing.JButton();
        closeBtn2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 204, 255));

        yearWiseDataComboBox.setFont(new java.awt.Font("Mangal", 0, 13)); // NOI18N
        yearWiseDataComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021-2022", "2022-2023", "2023-2024", "2024-2025", "2025-2026" }));

        showDataBtn.setFont(new java.awt.Font("Mangal", 0, 13)); // NOI18N
        showDataBtn.setText("माहिती प्रदर्शित करा");
        showDataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDataBtnActionPerformed(evt);
            }
        });

        uttarDakshinTable.setFont(new java.awt.Font("Mangal", 0, 13)); // NOI18N
        uttarDakshinTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(1), "2", "3", "4", "5", "6", "7", "8", "9"},
                { new Integer(1), "उत्तर", null, null, null, null, null, null, null},
                { new Integer(2), "दक्षिण", null, null, null, null, null, null, null}
            },
            new String [] {
                "अ_क्र", "बांधकाम विभाग", "मंजुर कामे", "निविदा स्थितीत असलेल्या कामांची संख्या", "कार्यारंभ आदेश दिलेल्या कामांची संख्या", "प्रगतीत असलेल्या कामांची संख्या", "पूर्ण झालेल्या कामांची संख्या", "रद्द कामांची संख्या", "शेरा"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        uttarDakshinTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(uttarDakshinTable);

        jComboBox1.setFont(new java.awt.Font("Mangal", 0, 13)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "योजना निवडा" }));

        jPanel6.setBackground(new java.awt.Color(255, 204, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "कृती", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Mangal", 1, 14))); // NOI18N

        exportToExcel1.setFont(new java.awt.Font("Mangal", 0, 13)); // NOI18N
        exportToExcel1.setText("विभाग एक्सेल मध्ये ");
        exportToExcel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportToExcel1ActionPerformed(evt);
            }
        });

        closeBtn1.setFont(new java.awt.Font("Mangal", 0, 13)); // NOI18N
        closeBtn1.setText("बंद करा");
        closeBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(exportToExcel1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportToExcel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        uttarDakshinTableAwhal.setFont(new java.awt.Font("Mangal", 0, 13)); // NOI18N
        uttarDakshinTableAwhal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        uttarDakshinTableAwhal.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(uttarDakshinTableAwhal);

        jPanel2.setBackground(new java.awt.Color(255, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "कृती", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Mangal", 1, 14))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(542, 108));

        exportToExcel2.setFont(new java.awt.Font("Mangal", 0, 13)); // NOI18N
        exportToExcel2.setText("विभाग एक्सेल मध्ये ");
        exportToExcel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportToExcel2ActionPerformed(evt);
            }
        });

        closeBtn2.setFont(new java.awt.Font("Mangal", 0, 13)); // NOI18N
        closeBtn2.setText("बंद करा");
        closeBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtn2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(exportToExcel2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE)
                .addComponent(closeBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportToExcel2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(yearWiseDataComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(showDataBtn))
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(195, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearWiseDataComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showDataBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void showDataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDataBtnActionPerformed
        // TODO add your handling code here:
        try {
            String tableNameDisplayForTable = jComboBox1.getSelectedItem().toString();
            tableNameDisplayForTable = "एमपीआर." + tableNameDisplayForTable;
            String yearDisplayForTable = yearWiseDataComboBox.getSelectedItem().toString();
            String VibhagArray[] = {"उत्तर विभाग", "दक्षिण विभाग"};

//            MANJUR KAME UTTAR VIBHAG
            Statement stmtManjurKameArray[] = new Statement[VibhagArray.length];
            ResultSet rsManjurKameArray[] = new ResultSet[VibhagArray.length];
            String manjurKameCount[] = new String[VibhagArray.length];

            for (int i = 0; i < VibhagArray.length; i++) {

                stmtManjurKameArray[i] = config.conn.createStatement();
                rsManjurKameArray[i] = stmtManjurKameArray[i].executeQuery("SELECT COUNT(बांधकाम_विभाग) AS COUNT1 FROM " + tableNameDisplayForTable + " WHERE बांधकाम_विभाग=N'" + VibhagArray[i] + "' AND वर्ष=N'" + yearDisplayForTable + "';");
                while (rsManjurKameArray[i].next()) {
                    manjurKameCount[i] = rsManjurKameArray[i].getString("COUNT1");
                }

            }

            for (int i = 1; i <= 2; i++) {
                System.out.println(manjurKameCount[i - 1]);
                uttarDakshinTable.setValueAt(manjurKameCount[i - 1], i, 2);
            }

            //NIVIDET STITI UTTAR VIBHAG
            Statement stmtNIVIDETSTITIArray[] = new Statement[VibhagArray.length];
            ResultSet rsNIVIDETSTITIArray[] = new ResultSet[VibhagArray.length];
            String NIVIDETSTITICount[] = new String[VibhagArray.length];

            for (int i = 0; i < VibhagArray.length; i++) {
                stmtNIVIDETSTITIArray[i] = config.conn.createStatement();
                rsNIVIDETSTITIArray[i] = stmtNIVIDETSTITIArray[i].executeQuery("SELECT COUNT(बांधकाम_विभाग) AS COUNT1 FROM " + tableNameDisplayForTable + " WHERE बांधकाम_विभाग=N'" + VibhagArray[i] + "' AND कामाचा_आदेश_व_दिनांक = N'NA' AND वर्ष=N'" + yearDisplayForTable + "';");
                while (rsNIVIDETSTITIArray[i].next()) {
                    NIVIDETSTITICount[i] = rsNIVIDETSTITIArray[i].getString("COUNT1");
                }
            }

            for (int i = 1; i <= 2; i++) {
                System.out.println(NIVIDETSTITICount[i - 1]);
                uttarDakshinTable.setValueAt(NIVIDETSTITICount[i - 1], i, 3);
            }

            //            KARYARAMBH AADESH AND  PRAGATIT KAMANCHI SANKHYA UTTAR VIBHAG
            Statement stmtKARYARAMBHAADESHArray[] = new Statement[VibhagArray.length];
            ResultSet rsKARYARAMBHAADESHArray[] = new ResultSet[VibhagArray.length];
            String KARYARAMBHAADESHCount[] = new String[VibhagArray.length];

            for (int i = 0; i < VibhagArray.length; i++) {
                stmtKARYARAMBHAADESHArray[i] = config.conn.createStatement();
                rsKARYARAMBHAADESHArray[i] = stmtKARYARAMBHAADESHArray[i].executeQuery("SELECT COUNT(बांधकाम_विभाग) AS COUNT1 FROM " + tableNameDisplayForTable + " WHERE बांधकाम_विभाग=N'" + VibhagArray[i] + "' AND कामाचा_आदेश_व_दिनांक != N'NA' AND वर्ष=N'" + yearDisplayForTable + "';");
                while (rsKARYARAMBHAADESHArray[i].next()) {
                    KARYARAMBHAADESHCount[i] = rsKARYARAMBHAADESHArray[i].getString("COUNT1");
                }
            }

            for (int i = 1; i <= 2; i++) {
                System.out.println(KARYARAMBHAADESHCount[i - 1]);
                uttarDakshinTable.setValueAt(KARYARAMBHAADESHCount[i - 1], i, 4);
                uttarDakshinTable.setValueAt(KARYARAMBHAADESHCount[i - 1], i, 5);
            }

            //            PURNA ZALELYA KAMANCHI SANKHYA UTTAR VIBHAG
            Statement stmtPURNAZALELYAArray[] = new Statement[VibhagArray.length];
            ResultSet rsPURNAZALELYAArray[] = new ResultSet[VibhagArray.length];
            String PURNAZALELYACount[] = new String[VibhagArray.length];

            for (int i = 0; i < VibhagArray.length; i++) {
                stmtPURNAZALELYAArray[i] = config.conn.createStatement();
                rsPURNAZALELYAArray[i] = stmtPURNAZALELYAArray[i].executeQuery("SELECT COUNT(बांधकाम_विभाग) AS COUNT1 FROM " + tableNameDisplayForTable + " WHERE बांधकाम_विभाग=N'" + VibhagArray[i] + "' AND काम_पूर्ण_झालेल्याचे_तारिक != N'NA' AND वर्ष=N'" + yearDisplayForTable + "';");
                while (rsPURNAZALELYAArray[i].next()) {
                    PURNAZALELYACount[i] = rsPURNAZALELYAArray[i].getString("COUNT1");
                }
            }

            for (int i = 1; i <= 2; i++) {
                System.out.println(PURNAZALELYACount[i - 1]);
                uttarDakshinTable.setValueAt(PURNAZALELYACount[i - 1], i, 6);

            }
            for (int i = 1; i <= 2; i++) {
                int a = Integer.parseInt(uttarDakshinTable.getValueAt(i, 5).toString());
                int b = Integer.parseInt(uttarDakshinTable.getValueAt(i, 6).toString());
                int c = a - b;
                uttarDakshinTable.setValueAt(c, i, 5);
            }

            //           RADHHA KAMANCHI SANKHYA UTTAR VIBHAG
            Statement stmtRadhhaArray[] = new Statement[VibhagArray.length];
            ResultSet rsRadhhaArray[] = new ResultSet[VibhagArray.length];
            String RadhhaTalukaCount[] = new String[VibhagArray.length];

            for (int i = 0; i < VibhagArray.length; i++) {
                stmtRadhhaArray[i] = config.conn.createStatement();
                rsRadhhaArray[i] = stmtRadhhaArray[i].executeQuery("SELECT COUNT(बांधकाम_विभाग) AS COUNT1 FROM " + tableNameDisplayForTable + " WHERE बांधकाम_विभाग=N'" + VibhagArray[i] + "' AND शेरा = N'काम रद्द' AND वर्ष=N'" + yearDisplayForTable + "';");
                while (rsRadhhaArray[i].next()) {
                    RadhhaTalukaCount[i] = rsRadhhaArray[i].getString("COUNT1");
                }
            }

            for (int i = 1; i <= 2; i++) {
                System.out.println(RadhhaTalukaCount[i - 1]);
                uttarDakshinTable.setValueAt(RadhhaTalukaCount[i - 1], i, 7);

            }

            for (int i = 1; i <= 2; i++) {
                int x = Integer.parseInt(uttarDakshinTable.getValueAt(i, 5).toString());
                int y = Integer.parseInt(uttarDakshinTable.getValueAt(i, 7).toString());
                int z = x - y;
                uttarDakshinTable.setValueAt(z, i, 5);
            }

            //SHERE START
            int sheraItemCount = AddData.sheraComboBox.getItemCount();
            System.out.println(sheraItemCount);

            String sheraValues[] = new String[sheraItemCount];

            for (int j = 0; j < sheraItemCount; j++) {
                sheraValues[j] = AddData.sheraComboBox.getItemAt(j);
            }

            // Print the values to verify
            for (String SHERAVALUES : sheraValues) {
                System.out.println(SHERAVALUES);
            }

            HashMap<String, String> map = new HashMap<>();

            ArrayList mapUttarValues = new ArrayList();
            ArrayList mapDakshinValues = new ArrayList();

            Statement UttarShereStmt = config.conn.createStatement();
            ResultSet rsUttarShere;
            String queryShereUttar;
            for (int i = 0; i < sheraItemCount; i++) {
                queryShereUttar = "SELECT COUNT(शेरा) AS COUNT1 FROM " + tableNameDisplayForTable + " WHERE शेरा=N'" + sheraValues[i] + "' AND बांधकाम_विभाग=N'उत्तर विभाग' AND वर्ष=N'" + yearDisplayForTable + "';";
                rsUttarShere = UttarShereStmt.executeQuery(queryShereUttar);
                while (rsUttarShere.next()) {
                    if (Integer.parseInt(rsUttarShere.getString("COUNT1")) >= 1) {
//                            sheraUttarVibhagCount[i] = uttarVibhagtalukaArray[j] + " - " + sheraValues[i] + " - " + rsUttarVibhagShera[i].getString("COUNT(शेरा)");

                        map.put(rsUttarShere.getString("COUNT1") + "-" + sheraValues[i], "उत्तर विभाग");
                        mapUttarValues.add(rsUttarShere.getString("COUNT1") + "-" + sheraValues[i]);
                    }
                }
            }

            Statement DakshinShereStmt = config.conn.createStatement();
            ResultSet rsDakshinShere;
            String queryShereDakshin;
            for (int i = 0; i < sheraItemCount; i++) {
                queryShereDakshin = "SELECT COUNT(शेरा) AS COUNT1 FROM " + tableNameDisplayForTable + " WHERE शेरा=N'" + sheraValues[i] + "' AND बांधकाम_विभाग=N'दक्षिण विभाग' AND वर्ष=N'" + yearDisplayForTable + "';";
                rsDakshinShere = DakshinShereStmt.executeQuery(queryShereDakshin);
                while (rsDakshinShere.next()) {
                    if (Integer.parseInt(rsDakshinShere.getString("COUNT1")) >= 1) {
//                            sheraUttarVibhagCount[i] = uttarVibhagtalukaArray[j] + " - " + sheraValues[i] + " - " + rsUttarVibhagShera[i].getString("COUNT(शेरा)");

                        map.put(rsDakshinShere.getString("COUNT1") + "-" + sheraValues[i], "महाबळेश्वर");
                        mapDakshinValues.add(rsDakshinShere.getString("COUNT1") + "-" + sheraValues[i]);
                    }
                }
            }

            uttarDakshinTable.setValueAt(mapUttarValues, 1, 8);
            uttarDakshinTable.setValueAt(mapDakshinValues, 2, 8);

            String nextYear = "";
            if (yearDisplayForTable == "2021-2022") {
                nextYear = "2022-2023";
            }
            if (yearDisplayForTable == "2022-2023") {
                nextYear = "2023-2024";
            }
            if (yearDisplayForTable == "2023-2024") {
                nextYear = "2024-2025";
            }
            if (yearDisplayForTable == "2024-2025") {
                nextYear = "2025-2026";
            }
            if (yearDisplayForTable == "2025-2026") {
                nextYear = "2026-2027";
            }

            System.out.println(nextYear);

            String[] columnNamesForKharchAwhal = {"अ.क्र.", "बांधकाम विभाग", "सन " + yearDisplayForTable + " मध्ये प्राप्त अनुदान", "31 मार्च पर्यंत अखेर खर्च", "1 एप्रिल चा शिल्लक निधी", "शिल्लक निधिमधील एकुण खर्च", "सन " + yearDisplayForTable + " मधील शिल्लक", "सन " + nextYear + " मध्ये प्राप्त अनुदान", "सन " + nextYear + " मध्ये प्राप्त अनुदान मधुन झालेला खर्च", "शिल्लक", "एकुण शिल्लक"};
            Object rowFirst[][] = {{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11},
            {1, "उत्तर"},
            {2, "दक्षिण"}
            };
            DefaultTableModel modelAhwal = new DefaultTableModel(rowFirst, columnNamesForKharchAwhal);
            uttarDakshinTableAwhal.setModel(modelAhwal);

            String querysunPraptAnudhanUttar = "SELECT SUM(प्राप्त_निधी_या_वर्षा_मध्ये) AS COUNT1 FROM " + tableNameDisplayForTable + " WHERE बांधकाम_विभाग=N'उत्तर विभाग' AND वर्ष=N'" + yearDisplayForTable + "';";

            Statement sunPraptAnudhanStmt[] = new Statement[VibhagArray.length];
            ResultSet rsSunPraptAnudhan[] = new ResultSet[VibhagArray.length];
            String SunPraptAnudhanCount[] = new String[VibhagArray.length];

            for (int i = 0; i < VibhagArray.length; i++) {

                sunPraptAnudhanStmt[i] = config.conn.createStatement();
                rsSunPraptAnudhan[i] = sunPraptAnudhanStmt[i].executeQuery("SELECT COALESCE(SUM(प्राप्त_निधी_या_वर्षा_मध्ये),0) AS COUNT1 FROM " + tableNameDisplayForTable + " WHERE बांधकाम_विभाग=N'" + VibhagArray[i] + "' AND वर्ष=N'" + yearDisplayForTable + "';");
                while (rsSunPraptAnudhan[i].next()) {
                    SunPraptAnudhanCount[i] = rsSunPraptAnudhan[i].getString("COUNT1");
                }

            }

            for (int i = 1; i <= 2; i++) {
                System.out.println(SunPraptAnudhanCount[i - 1]);
                uttarDakshinTableAwhal.setValueAt(SunPraptAnudhanCount[i - 1], i, 2);
            }

            Statement March31Stmt[] = new Statement[VibhagArray.length];
            ResultSet rsMarch31[] = new ResultSet[VibhagArray.length];
            String March31Count[] = new String[VibhagArray.length];

            for (int i = 0; i < VibhagArray.length; i++) {

                March31Stmt[i] = config.conn.createStatement();
                rsMarch31[i] = March31Stmt[i].executeQuery("SELECT COALESCE(SUM(या_वर्षा_मधील_खर्च_जी_एस_टी_सह),0) AS COUNT1 FROM " + tableNameDisplayForTable + " WHERE बांधकाम_विभाग=N'" + VibhagArray[i] + "' AND वर्ष=N'" + yearDisplayForTable + "';");
                while (rsMarch31[i].next()) {
                    March31Count[i] = rsMarch31[i].getString("COUNT1");
                }

            }

            for (int i = 1; i <= 2; i++) {
                System.out.println(March31Count[i - 1]);
                uttarDakshinTableAwhal.setValueAt(March31Count[i - 1], i, 3);
            }

            long April1Count[] = new long[VibhagArray.length];
            for (int i = 0; i < VibhagArray.length; i++) {
                April1Count[i]=(Long.parseLong(SunPraptAnudhanCount[i]))-(Long.parseLong(March31Count[i]));
            }
            
            for (int i = 1; i <= 2; i++) {
                System.out.println(April1Count[i - 1]);
                uttarDakshinTableAwhal.setValueAt(April1Count[i - 1], i, 4);
            }
            

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Exception occured : " + ex.toString(), "Monthly Progress Report", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }

    }//GEN-LAST:event_showDataBtnActionPerformed

    public void exportToExcelAwhal(JTable jt) {
        try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(jt);
            File saveFile = jFileChooser.getSelectedFile();
            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet(jComboBox1.getSelectedItem().toString() + "_" + yearWiseDataComboBox.getSelectedItem().toString());
                sheet.setColumnWidth(0, 1500);
                Row rowCol = sheet.createRow(0);
                XSSFFont font = ((XSSFWorkbook) wb).createFont();
                font.setBold(true);
                CellStyle style = wb.createCellStyle();
                style.setFont(font);
                for (int i = 0; i < jt.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellStyle(style);
                    cell.setCellValue(jt.getColumnName(i));
                    sheet.setColumnWidth(i + 1, 4000);

                }
                Cell cell = null;
                for (int j = 0; j < jt.getRowCount(); j++) {
                    Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < jt.getColumnCount(); k++) {
                        cell = row.createCell(k);
                        if (jt.getValueAt(j, k) != null) {
                            if (j == 0) {
                                cell.setCellStyle(style);
                            }
                            cell.setCellValue(jt.getValueAt(j, k).toString());

                        }

                    }
                }

                Row rowTotal = sheet.createRow(jt.getRowCount() + 1);

                Cell cellTotal = rowTotal.createCell(0);
                cellTotal.setCellValue("एकूण");
                cellTotal.setCellStyle(style);

                long sunPraptAnudhanSum = 0;
                long March31Sum = 0;
                long April1Sum = 0;
                
                for (int i = 1; i < jt.getRowCount(); i++) {
                    sunPraptAnudhanSum = (long) (sunPraptAnudhanSum + Long.parseLong(jt.getValueAt(i, 2).toString()));
                    March31Sum = (long) (March31Sum + Long.parseLong(jt.getValueAt(i, 3).toString()));
                    April1Sum = (long) (April1Sum + Long.parseLong(jt.getValueAt(i, 4).toString()));
                    
                }
                System.out.println("Manjur Sum : " + sunPraptAnudhanSum);

                Cell manjurCell = rowTotal.createCell(2);
                manjurCell.setCellValue(Long.toString(sunPraptAnudhanSum));
                manjurCell.setCellStyle(style);

                Cell nividitCell = rowTotal.createCell(3);
                nividitCell.setCellValue(Long.toString(March31Sum));
                nividitCell.setCellStyle(style);

                Cell karyarambhAdeshCell = rowTotal.createCell(4);
                karyarambhAdeshCell.setCellValue(Long.toString(April1Sum));
                karyarambhAdeshCell.setCellStyle(style);

               

                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                wb.close();
                out.close();
                AddData.openFile(saveFile.toString());

            } else {
                JOptionPane.showMessageDialog(null, "Operation Cancelled", "Monthly Progress Report", JOptionPane.ERROR_MESSAGE);

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Exception occured : " + ex.toString(), "Monthly Progress Report", JOptionPane.ERROR_MESSAGE);

        }
    }
    
    private void exportToExcel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportToExcel1ActionPerformed
        // TODO add your handling code here:
        AddData add = new AddData();
        add.exportToExcelUttar(uttarDakshinTable);
    }//GEN-LAST:event_exportToExcel1ActionPerformed

    private void closeBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtn1ActionPerformed
        // TODO add your handling code here:

        this.dispose();
    }//GEN-LAST:event_closeBtn1ActionPerformed

    private void exportToExcel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportToExcel2ActionPerformed
        // TODO add your handling code here:
       
        exportToExcelAwhal(uttarDakshinTableAwhal);
    }//GEN-LAST:event_exportToExcel2ActionPerformed

    private void closeBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtn2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_closeBtn2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeBtn1;
    private javax.swing.JButton closeBtn2;
    private javax.swing.JButton exportToExcel1;
    private javax.swing.JButton exportToExcel2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton showDataBtn;
    private javax.swing.JTable uttarDakshinTable;
    private javax.swing.JTable uttarDakshinTableAwhal;
    private javax.swing.JComboBox<String> yearWiseDataComboBox;
    // End of variables declaration//GEN-END:variables
}
